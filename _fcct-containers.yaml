variant: fcos
version: 1.1.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - ${SSH_KEY}
      groups: [ sudo, docker ]
systemd:
  units:
    - name: serial-getty@ttyS0.service
      dropins:
      - name: autologin-core.conf
        contents: |
          [Service]
          # Override Execstart in main unit
          ExecStart=
          # Add new Execstart with `-` prefix to ignore failure
          ExecStart=-/usr/sbin/agetty --autologin core --noclear %I ${TERM:-}
          TTYVTDisallocate=no
    - name: failure.service
      enabled: true
      contents: |
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/false
        RemainAfterExit=yes
        [Install]
        WantedBy=multi-user.target
    - name: issuegen-public-ipv4.service
      enabled: true
      contents: |
        [Unit]
        Before=console-login-helper-messages-issuegen.service
        After=network-online.target
        ConditionPathExists=!/var/lib/issuegen-public-ipv4

        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/public-ipv4.sh
        ExecStartPost=/usr/bin/touch /var/lib/issuegen-public-ipv4
        RemainAfterExit=yes

        [Install]
        WantedBy=console-login-helper-messages-issuegen.service
    - name: http-sigs.service
      enabled: true
      contents: |
        [Unit]
        Before=znc.service
        After=network-online.target
        Wants=network-online.target

        [Service]
        ExecStart=/usr/local/bin/http-sigs.sh
        ExecStop=killall http-sigs.sh

        [Install]
        WantedBy=multi-user.target
    - name: znc.service
      enabled: true
      contents: |
        [Unit]
        Description=ZNC IRC bouncer daemon
        After=network-online.target
        Wants=network-online.target

        [Service]
        ExecStartPre=-/bin/podman kill znc
        ExecStartPre=-/bin/podman rm znc
        ExecStartPre=/bin/podman pull --tls-verify=false seadog:5000/znc
        ExecStart=/bin/podman run --name znc --net=host --rm \
          --volume znc-data:/var/lib/znc --user znc:znc --publish 7777 \
          /usr/bin/znc --follow --makepem --makepass
        ExecStop=/bin/podman stop znc

        [Install]
        WantedBy=multi-user.target
storage:
  directories:
    - path: /var/lib/znc
      mode: 0700
      user:
        id: 777
      group:
        id: 777
    - path: /var/lib/znc/.znc
      mode: 0700
      user:
        id: 777
      group:
        id: 777
    - path: /var/lib/znc/.znc/configs
      mode: 0700
      user:
        id: 777
      group:
        id: 777
  files:
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: |
          ${VM_NAME}
    - path: /etc/profile.d/systemd-pager.sh
      mode: 0644
      contents:
        inline: |
          # Tell systemd to not use a pager when printing information
          export SYSTEMD_PAGER=cat
    - path: /etc/sysctl.d/20-silence-audit.conf
      mode: 0644
      contents:
        inline: |
          # Raise console message logging level from DEBUG (7) to WARNING (4)
          # to hide audit messages from the interactive console
          kernel.printk=4
    - path: /usr/local/bin/public-ipv4.sh
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          ipv4=$(curl https://ipv4.icanhazip.com)
          long_host=$(getent hosts ${ipv4:-})
          host=$(cat /etc/hostname)
          domain=bc.googleusercontent.com
          cat >/etc/hosts <<- EOF
          127.0.0.1 localhost
          ::1 localhost
          ${ipv4:-} ${host:-} ${host:-}.${domain:-} ${long_host:-}
          EOF
    - path: /var/lib/znc/.znc/configs/znc.conf
      mode: 0600
      contents:
        inline: |
          Version = 1.8.1
          <Listener l>
            Port = 7777
            IPv4 = true
            IPv6 = true
            SSL = true
          </Listener>

          <User aoei>
            Admin      = true
            Nick       = aoei
            AltNick    = aoei_
            Ident      = aoei
            RealName   = Joanna Doyle [https://github.com/aoeixsz4]
            BindHost   = ${VM_NAME}
            LoadModule = chansaver
            LoadModule = controlpanel
            LoadModule = simple_away
            LoadModule = sasl
            <Network freenode>
              Server = chat.freenode.net +6697
            </Network>
            <Network slashnet>
              Server = irc.slashnet.org +6697
            </Network>
          </User>
    - path: /etc/containers/registries/20-local-sigserv.yaml
      mode: 0644
      contents:
        inline: |
          neighbour:
            sigstore: http://localhost:8000
            sigstore-staging: file:///var/lib/znc/sigstore
    - path: /usr/local/bin/http-sigs.sh
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          cd /var/lib/containers/sigstore
          gpg --keyserver ${KEY_SERVER} --recv-key \
            ${GPG_KEY_ID} && gpg --export ${GPG_KEY_ID} \
            -o -a ${REMOTE_KEY_PATH}
          python3 -m http.service
    - path: /etc/containers/policy.json
      mode: 0755
      contents:
        inline: |
          {
            "default": [ {"type": "insecureAcceptAnything"} ],
            "transports":
            {
              "docker-daemon":
              { "": [{"type":"insecureAcceptAnything"}] },
              "neighbour":
              {
                "${REGISTRY_HOST}:${REGISTRY_PORT}": [
                  {
                    "type": "signedBy",
                    "keyType": "GPGKeys",
                    "keyPath": "${REMOTE_KEY_PATH}"
                  } ]
              }
            }
          }
